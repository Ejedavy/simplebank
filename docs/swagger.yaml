basePath: /
definitions:
  api.CreateAccountHandlerRequest:
    properties:
      currency:
        enum:
        - USD
        - EUR
        - RUB
        - NGN
        type: string
      owner:
        type: string
    required:
    - currency
    - owner
    type: object
  api.InitiateTransferHandlerRequest:
    properties:
      amount:
        minimum: 1
        type: integer
      receiver_id:
        minimum: 1
        type: integer
      sender_id:
        minimum: 1
        type: integer
    required:
    - amount
    - receiver_id
    - sender_id
    type: object
  api.ServerError:
    properties:
      error: {}
      message:
        type: string
    type: object
  api.UpdateAccountHandlerRequest:
    properties:
      balance:
        type: integer
      id:
        type: integer
    type: object
  db.Account:
    properties:
      balance:
        type: integer
      createdAt:
        type: string
      currency:
        type: string
      id:
        type: integer
      owner:
        type: string
    type: object
  db.Entry:
    properties:
      account_id:
        type: integer
      amount:
        description: Can be positive or negative
        type: integer
      createdAt:
        type: string
      id:
        type: integer
    type: object
  db.Transfer:
    properties:
      amount:
        description: This can only be positive
        type: integer
      createdAt:
        type: string
      from_account_id:
        type: integer
      id:
        type: integer
      to_account_id:
        type: integer
    type: object
  db.TransferTXResult:
    properties:
      amount:
        type: integer
      receiver:
        $ref: '#/definitions/db.Account'
      receiverEntry:
        $ref: '#/definitions/db.Entry'
      sender:
        $ref: '#/definitions/db.Account'
      senderEntry:
        $ref: '#/definitions/db.Entry'
      transfer:
        $ref: '#/definitions/db.Transfer'
    type: object
host: localhost:8080
info:
  contact:
    email: ejeohejidavid@gmail.com
    name: David Oheji
    url: https://twitter.com/ejedavy
  description: A simple bank API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://google.com
  title: Go Bank
  version: "1.0"
paths:
  /api/v1/account/createaccount:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create_Account
        in: body
        name: CreateAccount
        required: true
        schema:
          $ref: '#/definitions/api.CreateAccountHandlerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/db.Account'
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Account
  /api/v1/account/deleteaccount/{id}:
    delete:
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
        "400":
          description: We require all fields
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Account
  /api/v1/account/getaccount/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/db.Account'
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Account
  /api/v1/account/getaccounts:
    get:
      parameters:
      - description: pageID
        in: query
        name: page_id
        required: true
        type: integer
      - description: pageSize
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/db.Account'
            type: array
        "400":
          description: We require all fields
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Account
  /api/v1/account/updateaccount:
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/api.UpdateAccountHandlerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/db.Account'
        "400":
          description: We require all fields
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Account
  /api/v1/log/getentry/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/db.Entry'
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Entries
  /api/v1/log/listBankEntries:
    get:
      parameters:
      - description: pageID
        in: query
        name: page_id
        required: true
        type: integer
      - description: pageSize
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/db.Entry'
            type: array
        "400":
          description: We require all fields
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Entries
  /api/v1/log/listaccountentries:
    get:
      consumes:
      - application/json
      parameters:
      - description: pageID
        in: query
        name: page_id
        required: true
        type: integer
      - description: pageSize
        in: query
        name: page_size
        required: true
        type: integer
      - description: account_id
        in: body
        name: account_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/db.Entry'
            type: array
        "400":
          description: We require all fields
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Entries
  /api/v1/transfer/getTransfer/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/db.Transfer'
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Transfers
  /api/v1/transfer/getincomingtransfers:
    get:
      consumes:
      - application/json
      parameters:
      - description: pageID
        in: query
        name: page_id
        required: true
        type: integer
      - description: pageSize
        in: query
        name: page_size
        required: true
        type: integer
      - description: to_account_id
        in: body
        name: to_account_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/db.Transfer'
            type: array
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Transfers
  /api/v1/transfer/getoutgoingtransfers:
    get:
      consumes:
      - application/json
      parameters:
      - description: pageID
        in: query
        name: page_id
        required: true
        type: integer
      - description: pageSize
        in: query
        name: page_size
        required: true
        type: integer
      - description: from_account_id
        in: body
        name: from_account_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/db.Transfer'
            type: array
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Transfers
  /api/v1/transfer/initiatetransfer:
    post:
      consumes:
      - application/json
      parameters:
      - description: requestBody
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/api.InitiateTransferHandlerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/db.TransferTXResult'
        "400":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
        "500":
          description: Something went wrong
          schema:
            $ref: '#/definitions/api.ServerError'
      tags:
      - Transfers
swagger: "2.0"
